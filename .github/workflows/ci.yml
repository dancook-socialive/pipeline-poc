# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches:
      - "*"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      
      - name: Setup
        run: npm install --global yarn@1.22.17

      - name: Install
        run: yarn install
        
      - name: Lint
        run: yarn lint
        
      - name: Test
        run: yarn test:ci
  
  deploy-development:
    if: github.event_name == 'pull_request'
    needs: build
    runs-on: ubuntu-latest
    concurrency: development
    environment: development

    steps:
    - name: Magic Deploy
      run: echo 'deployed to development'
      
  
  deploy-development1:
    if: github.event_name == 'pull_request'
    needs: build
    runs-on: ubuntu-latest
    concurrency: dev 1
    environment: dev 1

    steps:
    - name: Magic Deploy
      run: echo 'deployed to development 1'
  
  deploy-staging:
    if: github.event.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest
    concurrency: staging
    environment: staging

    steps:
    - name: Magic Deploy
      run: echo 'deployed to staging'
  
  deploy-production:
    if: github.event.ref == 'refs/heads/main'
    needs: deploy-staging
    runs-on: ubuntu-latest
    concurrency: production
    environment: production

    steps:
    - name: Magic Deploy
      run: echo 'deployed to production'
